<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kfoodbox.article.repository.CommunityArticleRepository">
    <select id="findCommunityArticleEntityById" parameterType="long" resultType="kfoodbox.article.entity.CommunityArticle">
        SELECT *
        FROM `kfoodbox`.`community_article`
        WHERE `id` = #{id}
    </select>

    <select id="findCommunityArticleById" parameterType="long" resultMap="CommunityArticle">
        SELECT
            `t1`.`id`,
            `t1`.`title`,
            `t1`.`user_id`,
            `t1`.`content`,
            `t1`.`created_at`,
            `t1`.`updated_at`,
            `t2`.`nickname`,
            `t3`.`count` `like_count`,
            `t4`.`count` `comment_count`,
            `t5`.`url` `image_url`
        FROM (
            SELECT *
            FROM `kfoodbox`.`community_article`
            WHERE `id` = #{id}
        ) `t1`
            LEFT JOIN `kfoodbox`.`user` `t2`
            ON `t1`.`user_id` = `t2`.`id`
            LEFT JOIN (
                SELECT `community_article_id`, COUNT(*) `count`
                FROM `kfoodbox`.`community_article_like`
                GROUP BY `community_article_id`
            ) `t3`
            ON `t1`.`id` = `t3`.`community_article_id`
            LEFT JOIN (
                SELECT `community_article_id`, COUNT(*) `count`
                FROM `kfoodbox`.`community_comment`
                GROUP BY `community_article_id`
            ) `t4`
            ON `t1`.`id` = `t4`.`community_article_id`
            LEFT JOIN `kfoodbox`.`community_article_image` `t5`
            ON `t1`.`id` = `t5`.`community_article_id`
    </select>

    <insert id="saveCommunityArticle" parameterType="kfoodbox.article.entity.CommunityArticle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `kfoodbox`.`community_article` (`user_id`, `title`, `content`, `is_notice`)
        VALUES (#{communityArticle.userId}, #{communityArticle.title}, #{communityArticle.content}, #{communityArticle.isNotice})
    </insert>

    <insert id="saveCommunityArticleImages" parameterType="list">
        INSERT INTO `kfoodbox`.`community_article_image` (
            `community_article_id`,
            `url`
        )
        VALUES
        <foreach collection="communityArticleImages" item="item" separator=",">
            (
                #{item.communityArticleId},
                #{item.url}
            )
        </foreach>
    </insert>

    <select id="findCommunityArticleImagesByCommunityArticleId" parameterType="long" resultType="kfoodbox.article.entity.CommunityArticleImage">
        SELECT *
        FROM `kfoodbox`.`community_article_image`
        WHERE `community_article_id` = #{communityArticleId}
    </select>

    <update id="updateCommunityArticle" parameterType="kfoodbox.article.entity.CommunityArticle">
        UPDATE `kfoodbox`.`community_article`
        SET
            `title` = #{communityArticle.title},
            `content` = #{communityArticle.content}
        WHERE `id` = #{communityArticle.id}
    </update>

    <delete id="deleteCommunityArticleImages">
        DELETE
        FROM `kfoodbox`.`community_article_image`
        WHERE
            `community_article_id` = #{communityArticleId}
            AND `url` IN (
                <foreach collection="urls" item="item" separator=",">#{item}</foreach>
            )
    </delete>

    <delete id="deleteCommunityArticleById" parameterType="long">
        DELETE
        FROM `kfoodbox`.`community_article`
        WHERE `id` = #{id}
    </delete>

    <insert id="saveCommunityComment" parameterType="kfoodbox.article.entity.CommunityComment">
        INSERT INTO `kfoodbox`.`community_comment` (`community_article_id`, `user_id`, `content`)
        VALUES (#{communityComment.communityArticleId}, #{communityComment.userId}, #{communityComment.content});
    </insert>

    <select id="findCommunityCommentEntityById" parameterType="long" resultType="kfoodbox.article.entity.CommunityComment">
        SELECT *
        FROM `kfoodbox`.`community_comment`
        WHERE `id` = #{id}
    </select>

    <select id="updateCommunityComment" parameterType="kfoodbox.article.entity.CommunityComment">
        UPDATE `kfoodbox`.`community_comment`
        SET `content` = #{communityComment.content}
        WHERE `id` = #{communityComment.id}
    </select>

    <select id="findCommunityCommentsByCommunityArticleId" parameterType="long" resultType="kfoodbox.article.dto.response.CommunityCommentsResponse$Comment">
        SELECT
            `t1`.`id`,
            `t1`.`user_id`,
            `t2`.`nickname`,
            `t1`.`created_at`,
            `t1`.`updated_at`,
            `t1`.`content`
        FROM (
            SELECT *
            FROM `kfoodbox`.`community_comment`
            WHERE `community_article_id` = #{communityArticleId}
        ) `t1`
        LEFT JOIN `kfoodbox`.`user` `t2`
        ON `t1`.`user_id` = `t2`.`id`
    </select>

    <delete id="deleteCommunityCommentById" parameterType="long">
        DELETE
        FROM `kfoodbox`.`community_comment`
        WHERE `id` = #{id}
    </delete>

    <select id="getTotalCountOfCommunityArticlesByCondition" parameterType="kfoodbox.article.dto.request.CommunityArticlesCondition" resultType="long">
        SELECT COUNT(*)
        FROM `kfoodbox`.`community_article`

        <trim prefix="WHERE">
            `is_notice` =
            <if test='condition.type.name().equals("ALL")'> 0 </if>
            <if test='condition.type.name().equals("NOTICE")'> 1 </if>

            <if test="condition.query != null">
                <trim prefix="AND">
                    (
                        `title` LIKE CONCAT('%', #{condition.query}, '%')
                        OR `content` LIKE CONCAT('%', #{condition.query}, '%')
                    )
                </trim>
            </if>
        </trim>
    </select>

    <select id="findCommunityArticlesByCondition" resultType="kfoodbox.article.dto.response.CommunityArticlesResponse$Article">
        SELECT
            `t1`.`id`,
            `t1`.`title`,
            `t1`.`content`,
            COALESCE(`t2`.`count`, 0) `like_count`,
            COALESCE(`t3`.`count`, 0) `comment_count`,
            `t1`.`created_at`,
            `t4`.`nickname`
        FROM (
            SELECT *
            FROM `kfoodbox`.`community_article`

            <trim prefix="WHERE">
                `is_notice` =
                <if test='condition.type.name().equals("ALL")'> 0 </if>
                <if test='condition.type.name().equals("NOTICE")'> 1 </if>

                <if test="condition.query != null">
                    <trim prefix="AND">
                        (
                            `title` LIKE CONCAT('%', #{condition.query}, '%')
                            OR `content` LIKE CONCAT('%', #{condition.query}, '%')
                        )
                    </trim>
                </if>
            </trim>
        ) `t1`

        LEFT JOIN (
            SELECT `community_article_id`, COUNT(*) `count`
            FROM `kfoodbox`.`community_article_like`
            GROUP BY `community_article_id`
        ) `t2`
        ON `t1`.`id` = `t2`.`community_article_id`

        LEFT JOIN (
            SELECT `community_article_id`, COUNT(*) `count`
            FROM `kfoodbox`.`community_comment`
            GROUP BY `community_article_id`
        ) `t3`
        ON `t1`.`id` = `t3`.`community_article_id`

        LEFT JOIN `kfoodbox`.`user` `t4`
        ON `t1`.`user_id` = `t4`.`id`

        <if test="condition.sort != null">
            <trim prefix="ORDER BY">
                <if test='condition.sort.name().equals("LATEST")'>
                    `created_at` DESC
                </if>
                <if test='condition.sort.name().equals("OLDEST")'>
                    `created_at` ASC
                </if>
                <if test='condition.sort.name().equals("LIKES")'>
                    `like_count` DESC
                </if>
                <if test='condition.sort.name().equals("COMMENTS")'>
                    `comment_count` DESC
                </if>
            </trim>
        </if>

        LIMIT #{cursor}, #{condition.limit}
    </select>

    <select id="findCommunityArticlesByQuery" parameterType="string" resultType="kfoodbox.article.entity.CommunityArticle">
        SELECT *
        FROM `kfoodbox`.`community_article`
        WHERE
            `title` LIKE CONCAT('%', #{query}, '%')
            OR `content` LIKE CONCAT('%', #{query}, '%')
    </select>

    <resultMap id="CommunityArticle" type="kfoodbox.article.dto.response.CommunityArticleResponse">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="userId" column="user_id"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="nickname" column="nickname"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <collection property="imageUrls" javaType="list" ofType="string">
            <result property="imageUrl" column="image_url"/>
        </collection>
    </resultMap>
</mapper>
