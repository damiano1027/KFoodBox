<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kfoodbox.article.repository.CommunityArticleRepository">
    <select id="findCommunityArticleEntityById" parameterType="long" resultType="kfoodbox.article.entity.CommunityArticle">
        SELECT *
        FROM `kfoodbox`.`community_article`
        WHERE `id` = #{id}
    </select>

    <select id="findCommunityArticleById" parameterType="long" resultType="kfoodbox.article.dto.response.CommunityArticleResponse">
        SELECT
            `t1`.`id`,
            `t1`.`title`,
            `t1`.`user_id`,
            `t1`.`content`,
            `t1`.`created_at`,
            `t1`.`updated_at`,
            `t2`.`nickname`,
            `t3`.`count` `like_count`,
            `t4`.`count` `comment_count`
        FROM (
            SELECT *
            FROM `kfoodbox`.`community_article`
            WHERE `id` = #{id}
        ) `t1`
            LEFT JOIN `kfoodbox`.`user` `t2`
            ON `t1`.`user_id` = `t2`.`id`
            LEFT JOIN (
                SELECT `community_article_id`, COUNT(*) `count`
                FROM `kfoodbox`.`community_article_like`
                GROUP BY `community_article_id`
            ) `t3`
            ON `t1`.`id` = `t3`.`community_article_id`
            LEFT JOIN (
                SELECT `community_article_id`, COUNT(*) `count`
                FROM `kfoodbox`.`community_comment`
                GROUP BY `community_article_id`
            ) `t4`
            ON `t1`.`id` = `t4`.`community_article_id`
    </select>

    <insert id="saveCommunityArticle" parameterType="kfoodbox.article.entity.CommunityArticle" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `kfoodbox`.`community_article` (`user_id`, `title`, `content`, `is_notice`)
        VALUES (#{communityArticle.userId}, #{communityArticle.title}, #{communityArticle.content}, #{communityArticle.isNotice})
    </insert>

    <insert id="saveCommunityArticleImages" parameterType="list">
        INSERT INTO `kfoodbox`.`community_article_image` (
            `community_article_id`,
            `url`
        )
        VALUES
        <foreach collection="communityArticleImages" item="item" separator=",">
            (
                #{item.communityArticleId},
                #{item.url}
            )
        </foreach>
    </insert>

    <select id="findCommunityArticleImagesByCommunityArticleId" parameterType="long" resultType="kfoodbox.article.entity.CommunityArticleImage">
        SELECT *
        FROM `kfoodbox`.`community_article_image`
        WHERE `community_article_id` = #{communityArticleId}
    </select>

    <update id="updateCommunityArticle" parameterType="kfoodbox.article.entity.CommunityArticle">
        UPDATE `kfoodbox`.`community_article`
        SET
            `title` = #{communityArticle.title},
            `content` = #{communityArticle.content}
        WHERE `id` = #{communityArticle.id}
    </update>

    <delete id="deleteCommunityArticleImages">
        DELETE
        FROM `kfoodbox`.`community_article_image`
        WHERE
            `community_article_id` = #{communityArticleId}
            AND `url` IN (
                <foreach collection="urls" item="item" separator=",">#{item}</foreach>
            )
    </delete>

    <delete id="deleteCommunityArticleById" parameterType="long">
        DELETE
        FROM `kfoodbox`.`community_article`
        WHERE `id` = #{id}
    </delete>

    <insert id="saveCommunityComment" parameterType="kfoodbox.article.entity.CommunityComment">
        INSERT INTO `kfoodbox`.`community_comment` (`community_article_id`, `user_id`, `content`)
        VALUES (#{communityComment.communityArticleId}, #{communityComment.userId}, #{communityComment.content});
    </insert>
</mapper>
